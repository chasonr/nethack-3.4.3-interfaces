From 79479bd8fb3fb6818f0c0ea08c192012b6f29a0a Mon Sep 17 00:00:00 2001
From: Ian Jackson <sysadmin@chiark.greenend.org.uk>
Date: Thu, 24 Sep 2009 14:21:19 -0700
Subject: Be a little bit more useful with recover's error messages

---
 util/recover.c |   23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/util/recover.c b/util/recover.c
index 5bb9f2f..183474e 100644
--- a/util/recover.c
+++ b/util/recover.c
@@ -39,7 +39,7 @@ void FDECL(copy_bytes, (int,int));
 #define Fprintf	(void)nhce_message
 static void nhce_message(FILE*, const char*, ...);
 #endif
-
+#define Perror  (void)perror
 #define Close	(void)close
 
 #ifdef UNIX
@@ -65,6 +65,7 @@ extern unsigned _stklen = STKSIZ;
 #endif
 char savename[SAVESIZE]; /* holds relative path of save file from playground */
 
+const char *dir = (char*)0;
 
 int
 main(argc, argv)
@@ -72,7 +73,6 @@ int argc;
 char *argv[];
 {
 	int argno;
-	const char *dir = (char *)0;
 #ifdef AMIGA
 	char *startdir = (char *)0;
 #endif
@@ -138,7 +138,8 @@ char *argv[];
 	startdir = getcwd(0,255);
 #endif
 	if (dir && chdir((char *) dir) < 0) {
-		Fprintf(stderr, "%s: cannot chdir to %s.\n", argv[0], dir);
+		Fprintf(stderr, "%s: cannot chdir:", argv[0]);
+                Perror(dir);
 		exit(EXIT_FAILURE);
 	}
 
@@ -275,7 +276,9 @@ char *basename;
 	  	Fprintf(stderr,
 			"\nTrouble accessing level 0 (errno = %d).\n", errno);
 #endif
-	    Fprintf(stderr, "Cannot open level 0 for %s.\n", basename);
+	    Fprintf(stderr, "Cannot open level 0 for %s in directory %s: ",
+                basename, dir);
+            Perror(lock);
 	    return(-1);
 	}
 	if (read(gfd, (genericptr_t) &hpid, sizeof hpid) != sizeof hpid) {
@@ -297,7 +300,8 @@ char *basename;
 		!= sizeof savename) ||
 	    (read(gfd, (genericptr_t) &version_data, sizeof version_data)
 		!= sizeof version_data)) {
-	    Fprintf(stderr, "Error reading %s -- can't recover.\n", lock);
+	    Fprintf(stderr, "Error reading, can't recover: ");
+            Perror(lock);
 	    Close(gfd);
 	    return(-1);
 	}
@@ -310,14 +314,16 @@ char *basename;
 	 */
 	sfd = create_savefile();
 	if (sfd < 0) {
-	    Fprintf(stderr, "Cannot create savefile %s.\n", savename);
+	    Fprintf(stderr, "Cannot create savefile in %s: ", dir);
+            Perror(savename);
 	    Close(gfd);
 	    return(-1);
 	}
 
 	lfd = open_levelfile(savelev);
 	if (lfd < 0) {
-	    Fprintf(stderr, "Cannot open level of save for %s.\n", basename);
+	    Fprintf(stderr, "Cannot open level of save for %s: ", basename);
+            Perror(lock);
 	    Close(gfd);
 	    Close(sfd);
 	    return(-1);
@@ -325,7 +331,8 @@ char *basename;
 
 	if (write(sfd, (genericptr_t) &version_data, sizeof version_data)
 		!= sizeof version_data) {
-	    Fprintf(stderr, "Error writing %s; recovery failed.\n", savename);
+	    Fprintf(stderr, "Error writing, recovery failed: ");
+            Perror(savename);
 	    Close(gfd);
 	    Close(sfd);
 	    return(-1);
